name: Deploy Frontend to GitHub Pages

on:
  push:
    branches: [main]
    paths: ["frontend/**"]
  workflow_dispatch:
    inputs:
      force_deploy:
        description: "Force deployment even if no frontend changes"
        required: false
        default: "false"

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    name: Build Frontend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test -- --run

      - name: Build application
        env:
          VITE_SECRETS_SERVICE_URL: ${{ secrets.VITE_SECRETS_SERVICE_URL }}
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./frontend/dist

  deploy:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Create deployment summary
        run: |
          cat >> $GITHUB_STEP_SUMMARY << EOF
          # 🚀 Frontend Deployment Successful!

          ## 📋 Deployment Details
          - **Environment**: GitHub Pages
          - **URL**: [${{ steps.deployment.outputs.page_url }}](${{ steps.deployment.outputs.page_url }})
          - **Commit**: \`${{ github.sha }}\`
          - **Branch**: \`${{ github.ref_name }}\`

          ## 🔗 Application Links
          - **Live Site**: [${{ steps.deployment.outputs.page_url }}](${{ steps.deployment.outputs.page_url }})
          - **Repository**: [GitHub Repository](https://github.com/${{ github.repository }})

          ## ⚙️ Build Configuration
          - **Backend URL**: \`${{ secrets.VITE_SECRETS_SERVICE_URL || 'http://localhost:8080' }}\`
          - **Node.js Version**: 18
          - **Build Tool**: Vite

          ## 🛠 Local Development
          \`\`\`bash
          cd frontend
          npm install
          npm run dev
          \`\`\`
          EOF

  notify:
    name: Send Notifications
    runs-on: ubuntu-latest
    needs: [build, deploy]
    if: always()

    steps:
      - name: Notify on success
        if: needs.deploy.result == 'success'
        run: |
          echo "✅ Frontend deployment completed successfully!"
          # Add Slack/Discord/Email notification here if needed

      - name: Notify on failure
        if: needs.build.result == 'failure' || needs.deploy.result == 'failure'
        run: |
          echo "❌ Frontend deployment failed!"
          # Add failure notification here if needed
          exit 1
